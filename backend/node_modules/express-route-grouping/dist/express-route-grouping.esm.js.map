{"version":3,"file":"express-route-grouping.esm.js","sources":["../src/resources.ts","../src/index.ts"],"sourcesContent":["const RESOURCES = {\n  index: { method: 'get', suffix: false },\n  find: { method: 'get', suffix: true },\n  create: { method: 'post', suffix: false },\n  update: { method: 'put', suffix: true },\n  patch: { method: 'patch', suffix: true },\n  delete: { method: 'delete', suffix: true },\n} as Record<string, Record<string, any>>;\n\nexport default RESOURCES;\n","import { IRouter as IExpressRouter, Router } from 'express';\nimport pluralize from 'pluralize';\nimport { RequestMethods, ResourceOptions, Resources } from './types';\nimport RESOURCES from './resources';\n\ntype GroupCallback = (router: IRouter) => void;\n\ntype IRouter = IExpressRouter & {\n  group: (path: string, fn: GroupCallback) => void;\n  resource: (options: ResourceOptions) => void;\n  export: () => IExpressRouter;\n};\n\nclass RouteGroup {\n  private head: string;\n  private router: IExpressRouter;\n  private proxyRouter?: IRouter;\n\n  constructor(path: string = '/', router: IExpressRouter = Router()) {\n    this.head = path;\n    this.router = router;\n  }\n\n  public group = (path: string = '', fn: GroupCallback): void => {\n    const newGroup = new RouteGroup(\n      this.head + this.sanitize(path),\n      this.router\n    );\n    this.proxyRouter = this.createProxy(this.router, newGroup);\n    fn(this.proxyRouter);\n  };\n\n  public resource = (options: ResourceOptions) => {\n    if (!options) {\n      throw new Error('Resource handlers are required!');\n    }\n\n    const { handlers = {}, beforeHandlers = [], afterHandlers = [] } = options;\n\n    Object.keys(RESOURCES).forEach((name: string) => {\n      const { method, suffix } = RESOURCES[name];\n      const requestRouter = this.router[method as RequestMethods];\n\n      const fullPath = this.to(suffix ? this.getPlaceholder() : '/');\n      const handler = handlers[name as Resources] as any;\n\n      if (handler) {\n        requestRouter.bind(this.router)(\n          fullPath,\n          ...beforeHandlers,\n          ...(Array.isArray(handler) ? handler : [handler]),\n          ...afterHandlers\n        );\n      }\n    });\n  };\n\n  public export = () => this.router;\n\n  public to = (suffix: string = '/'): string => {\n    return this.head + this.sanitize(suffix);\n  };\n\n  private sanitize(path: string): string {\n    if (path === '/') return '';\n\n    // remove slashes at start and end positions, if exists\n    // to sure there is no any slashes.\n    let newPath = path.replace(/^(\\/+)(.)/, '$2').replace(/(.)(\\/+)$/, '$1');\n\n    // add delimiter on the end\n    if (this.head !== '/') {\n      newPath = newPath.padStart(newPath.length + 1, '/');\n    }\n\n    return newPath;\n  }\n\n  private toCamelCase(str: string): string {\n    if (str === '') {\n      return str;\n    }\n\n    const word = str\n      .replace(/[^A-Za-z0-9]/g, ' ') // transfrom non-alphanumeric chars to space\n      .replace(/\\s+/g, ' ') // trim multiple space\n      .split(/[-_\\s]/)\n      .map(f => f[0].toLocaleUpperCase() + f.substr(1))\n      .join('');\n\n    return word[0].toLocaleLowerCase() + word.substr(1);\n  }\n\n  private callRouter(value: Function | RequestMethods) {\n    return typeof value === 'function'\n      ? (path: string, ...handlers: CallableFunction[]) => {\n          value.call(this.router, this.to(path), ...handlers);\n        }\n      : this.router[value];\n  }\n\n  private getPlaceholder() {\n    const namespace = this.head.split('/').pop() || '';\n    const prefix = pluralize.singular(this.toCamelCase(namespace));\n    return `:${prefix ? `${prefix}Id` : 'id'}`;\n  }\n\n  private createProxy(router: IExpressRouter, newGroup: RouteGroup) {\n    const self = newGroup as any;\n    const callRouter = this.callRouter.bind(newGroup);\n    const handler = {\n      get: function(_: any, prop: any) {\n        return self[prop]\n          ? Reflect.get(self, prop)\n          : callRouter(router[prop as RequestMethods]);\n      },\n    };\n\n    return new Proxy<IRouter>(this as any, handler);\n  }\n}\n\nexport default RouteGroup;\n"],"names":["RESOURCES","index","method","suffix","find","create","update","patch","RouteGroup","path","router","Router","fn","newGroup","head","sanitize","proxyRouter","createProxy","options","Error","handlers","beforeHandlers","afterHandlers","Object","keys","forEach","name","requestRouter","fullPath","to","getPlaceholder","handler","bind","Array","isArray","newPath","replace","padStart","length","toCamelCase","str","word","split","map","f","toLocaleUpperCase","substr","join","toLocaleLowerCase","callRouter","value","call","namespace","pop","prefix","pluralize","singular","self","get","_","prop","Reflect","Proxy"],"mappings":"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"}